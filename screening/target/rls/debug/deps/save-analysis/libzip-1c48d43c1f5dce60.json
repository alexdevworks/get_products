{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5","program":"C:\\Users\\alexd\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","zip","--edition=2018","C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"deflate\"","--cfg","feature=\"flate2\"","-C","metadata=1c48d43c1f5dce60","-C","extra-filename=-1c48d43c1f5dce60","--out-dir","c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps","--extern","crc32fast=c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps\\libcrc32fast-950996488ca0bd41.rmeta","--extern","flate2=c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps\\libflate2-daafae0e651f0700.rmeta","--extern","podio=c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps\\libpodio-06dfe87ab8cb8990.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\alexd\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\alexd\\screening\\screening\\target\\rls\\debug\\deps\\libzip-1c48d43c1f5dce60.rmeta"},"prelude":{"crate_id":{"name":"zip","disambiguator":[1186531509234109401,15628196258158380898]},"crate_root":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src","external_crates":[{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9841458385686728621,15575055662541448531]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17919213227389061864,3687462448081315021]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[117649788198974291,9401830764183487500]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16805511066922772367,1475770714066637805]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6932327359549611065,14246427449334719808]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[10224979718716634612,8460908855091801084]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3917603931972316087,6031530912861913142]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1909649518730319250,15976693491490976054]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9858513891483661062,11973857511412016831]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[2302790573754666385,5170192652780636563]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[16882338025965339030,8535442690485361914]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4842953915852994816,3810175436331841417]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14037401367256211658,2835270069367976133]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","num":14,"id":{"name":"podio","disambiguator":[15300154026871630394,5331448350628109633]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","num":15,"id":{"name":"crc32fast","disambiguator":[17930152372914600843,14951477268181398434]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","num":16,"id":{"name":"cfg_if","disambiguator":[13911046796278251122,10586064551534802524]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","num":17,"id":{"name":"flate2","disambiguator":[899568454886418575,14191016440689185119]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[365468328609575875,3200479526355609837]}},{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","num":19,"id":{"name":"adler32","disambiguator":[16089685753846908022,11369949248511973763]}}],"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":0,"byte_end":310,"line_start":1,"line_end":17,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":81,"byte_end":91,"line_start":5,"line_end":5,"column_start":22,"column_end":32},"alias_span":null,"name":"ZipArchive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":115,"byte_end":124,"line_start":6,"line_end":6,"column_start":23,"column_end":32},"alias_span":null,"name":"ZipWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":154,"byte_end":171,"line_start":7,"line_end":7,"column_start":29,"column_end":46},"alias_span":null,"name":"CompressionMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":195,"byte_end":203,"line_start":8,"line_end":8,"column_start":23,"column_end":31},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":0,"byte_end":310,"line_start":1,"line_end":17,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":59},{"krate":0,"index":76},{"krate":0,"index":99},{"krate":0,"index":189},{"krate":0,"index":196},{"krate":0,"index":282},{"krate":0,"index":298}],"decl_id":null,"docs":" A basic ZipReader/Writer crate\n","sig":null,"attributes":[{"value":"! A basic ZipReader/Writer crate","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":36,"byte_end":58,"line_start":3,"line_end":3,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10398,"byte_end":10406,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::types::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" A DateTime field to be used for storing timestamps in a zip file","sig":null,"attributes":[{"value":"/ A DateTime field to be used for storing timestamps in a zip file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":9951,"byte_end":10019,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10020,"byte_end":10023,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This structure does bounds checking to ensure the date is able to be stored in a zip file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10024,"byte_end":10118,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10119,"byte_end":10122,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When constructed manually from a date and time, it will also check if the input is sensible","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10123,"byte_end":10218,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ (e.g. months are from [1, 12]), but when read from a zip some parts may be out of their normal","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10219,"byte_end":10317,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ bounds (e.g. month 0, or hour 31).","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10318,"byte_end":10356,"line_start":32,"line_end":32,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10901,"byte_end":10911,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"from_msdos","qualname":"<DateTime>::from_msdos","value":"fn (datepart: u16, timepart: u16) -> DateTime","parent":null,"children":[],"decl_id":null,"docs":" Converts an msdos (u16, u16) pair to a DateTime object\n","sig":null,"attributes":[{"value":"/ Converts an msdos (u16, u16) pair to a DateTime object","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10831,"byte_end":10889,"line_start":58,"line_end":58,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11814,"byte_end":11832,"line_start":86,"line_end":86,"column_start":12,"column_end":30},"name":"from_date_and_time","qualname":"<DateTime>::from_date_and_time","value":"fn (year: u16, month: u8, day: u8, hour: u8, minute: u8, second: u8) -> Result<DateTime, ()>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a DateTime from a specific date and time","sig":null,"attributes":[{"value":"/ Constructs a DateTime from a specific date and time","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11562,"byte_end":11617,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11622,"byte_end":11625,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The bounds are:","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11630,"byte_end":11649,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * year: [1980, 2107]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11654,"byte_end":11678,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/ * month: [1, 12]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11683,"byte_end":11703,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/ * day: [1, 31]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11708,"byte_end":11726,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ * hour: [0, 23]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11731,"byte_end":11750,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/ * minute: [0, 59]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11755,"byte_end":11776,"line_start":84,"line_end":84,"column_start":5,"column_end":26}},{"value":"/ * second: [0, 60]","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":11781,"byte_end":11802,"line_start":85,"line_end":85,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":13374,"byte_end":13382,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"timepart","qualname":"<DateTime>::timepart","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the time portion of this datetime in the msdos representation\n","sig":null,"attributes":[{"value":"/ Gets the time portion of this datetime in the msdos representation","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":13292,"byte_end":13362,"line_start":134,"line_end":134,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":13587,"byte_end":13595,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"datepart","qualname":"<DateTime>::datepart","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the date portion of this datetime in the msdos representation\n","sig":null,"attributes":[{"value":"/ Gets the date portion of this datetime in the msdos representation","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":13505,"byte_end":13575,"line_start":139,"line_end":139,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14355,"byte_end":14359,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"year","qualname":"<DateTime>::year","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the year. There is no epoch, i.e. 2018 will be returned as 2018.\n","sig":null,"attributes":[{"value":"/ Get the year. There is no epoch, i.e. 2018 will be returned as 2018.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14271,"byte_end":14343,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14471,"byte_end":14476,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"month","qualname":"<DateTime>::month","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the month, where 1 = january and 12 = december\n","sig":null,"attributes":[{"value":"/ Get the month, where 1 = january and 12 = december","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14405,"byte_end":14459,"line_start":166,"line_end":166,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14549,"byte_end":14552,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"day","qualname":"<DateTime>::day","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day\n","sig":null,"attributes":[{"value":"/ Get the day","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14522,"byte_end":14537,"line_start":171,"line_end":171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14624,"byte_end":14628,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"hour","qualname":"<DateTime>::hour","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the hour\n","sig":null,"attributes":[{"value":"/ Get the hour","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14596,"byte_end":14612,"line_start":176,"line_end":176,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14703,"byte_end":14709,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"minute","qualname":"<DateTime>::minute","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute\n","sig":null,"attributes":[{"value":"/ Get the minute","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14673,"byte_end":14691,"line_start":181,"line_end":181,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14786,"byte_end":14792,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"second","qualname":"<DateTime>::second","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second\n","sig":null,"attributes":[{"value":"/ Get the second","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":14756,"byte_end":14774,"line_start":186,"line_end":186,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":367},{"krate":0,"index":377},{"krate":0,"index":374},{"krate":0,"index":122},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":186}],"decl_id":null,"docs":" Structs for reading a ZIP archive\n","sig":null,"attributes":[{"value":"! Structs for reading a ZIP archive","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23121,"byte_end":23158,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24495,"byte_end":24505,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"ZipArchive","qualname":"::read::ZipArchive","value":"ZipArchive {  }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"decl_id":null,"docs":" Wrapper for reading the contents of a ZIP file.","sig":null,"attributes":[{"value":"/ Wrapper for reading the contents of a ZIP file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23716,"byte_end":23767,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23768,"byte_end":23771,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23772,"byte_end":23779,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ fn doit() -> zip::result::ZipResult<()>","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23780,"byte_end":23823,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23824,"byte_end":23829,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/     use std::io::prelude::*;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23830,"byte_end":23862,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23863,"byte_end":23866,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // For demonstration purposes we read from an empty buffer.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23867,"byte_end":23934,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/     // Normally a File object would be used.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23935,"byte_end":23983,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     let buf: &[u8] = &[0u8; 128];","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":23984,"byte_end":24021,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/     let mut reader = std::io::Cursor::new(buf);","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24022,"byte_end":24073,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24074,"byte_end":24077,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     let mut zip = zip::ZipArchive::new(reader)?;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24078,"byte_end":24130,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24131,"byte_end":24134,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     for i in 0..zip.len()","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24135,"byte_end":24164,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24165,"byte_end":24174,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/         let mut file = zip.by_index(i).unwrap();","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24175,"byte_end":24227,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/         println!(\"Filename: {}\", file.name());","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24228,"byte_end":24278,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/         let first_byte = file.bytes().next().unwrap()?;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24279,"byte_end":24338,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/         println!(\"{}\", first_byte);","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24339,"byte_end":24378,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24379,"byte_end":24388,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24389,"byte_end":24403,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24404,"byte_end":24409,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24410,"byte_end":24413,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ println!(\"Result: {:?}\", doit());","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24414,"byte_end":24451,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24452,"byte_end":24459,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":25005,"byte_end":25012,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"ZipFile","qualname":"::read::ZipFile","value":"ZipFile {  }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" A struct for reading a zip file\n","sig":null,"attributes":[{"value":"/ A struct for reading a zip file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":24958,"byte_end":24993,"line_start":72,"line_end":72,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":30254,"byte_end":30257,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipArchive<R>>::new","value":"fn (mut reader: R) -> ZipResult<ZipArchive<R>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a Zip archive and parses the central directory\n","sig":null,"attributes":[{"value":"/ Opens a Zip archive and parses the central directory","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":30186,"byte_end":30242,"line_start":194,"line_end":194,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31805,"byte_end":31808,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"len","qualname":"<ZipArchive<R>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of files contained in this zip.","sig":null,"attributes":[{"value":"/ Number of files contained in this zip.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31443,"byte_end":31485,"line_start":229,"line_end":229,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31490,"byte_end":31493,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31498,"byte_end":31505,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ fn iter() {","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31510,"byte_end":31525,"line_start":232,"line_end":232,"column_start":5,"column_end":20}},{"value":"/     let mut zip = zip::ZipArchive::new(std::io::Cursor::new(vec![])).unwrap();","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31530,"byte_end":31612,"line_start":233,"line_end":233,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31617,"byte_end":31620,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     for i in 0..zip.len() {","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31625,"byte_end":31656,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/         let mut file = zip.by_index(i).unwrap();","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31661,"byte_end":31713,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/         // Do something with file i","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31718,"byte_end":31757,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31762,"byte_end":31771,"line_start":238,"line_end":238,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31776,"byte_end":31781,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31786,"byte_end":31793,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32137,"byte_end":32143,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"offset","qualname":"<ZipArchive<R>>::offset","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the offset from the beginning of the underlying reader that this zip begins at, in bytes.","sig":null,"attributes":[{"value":"/ Get the offset from the beginning of the underlying reader that this zip begins at, in bytes.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31867,"byte_end":31964,"line_start":246,"line_end":246,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31969,"byte_end":31972,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Normally this value is zero, but if the zip has arbitrary data prepended to it, then this value will be the size","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":31977,"byte_end":32093,"line_start":248,"line_end":248,"column_start":5,"column_end":121}},{"value":"/ of that prepended data.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32098,"byte_end":32125,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32242,"byte_end":32249,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"comment","qualname":"<ZipArchive<R>>::comment","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the comment of the zip archive.\n","sig":null,"attributes":[{"value":"/ Get the comment of the zip archive.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32191,"byte_end":32230,"line_start":254,"line_end":254,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32391,"byte_end":32401,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"file_names","qualname":"<ZipArchive<R>>::file_names","value":"fn (&self) -> impl Iterator<Item = &str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the file and directory names in this archive.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the file and directory names in this archive.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32301,"byte_end":32379,"line_start":259,"line_end":259,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32549,"byte_end":32556,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"by_name","qualname":"<ZipArchive<R>>::by_name","value":"fn <'a> (&'a mut self, name: &str) -> ZipResult<ZipFile<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Search for a file entry by name\n","sig":null,"attributes":[{"value":"/ Search for a file entry by name","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32502,"byte_end":32537,"line_start":264,"line_end":264,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32864,"byte_end":32872,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"by_index","qualname":"<ZipArchive<R>>::by_index","value":"fn <'a> (&'a mut self, file_number: usize) -> ZipResult<ZipFile<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Get a contained file by index\n","sig":null,"attributes":[{"value":"/ Get a contained file by index","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":32819,"byte_end":32852,"line_start":274,"line_end":274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":34298,"byte_end":34308,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZipArchive<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap and return the inner reader object","sig":null,"attributes":[{"value":"/ Unwrap and return the inner reader object","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":34184,"byte_end":34229,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":34234,"byte_end":34237,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The position of the reader is undefined.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":34242,"byte_end":34286,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39297,"byte_end":39312,"line_start":442,"line_end":442,"column_start":12,"column_end":27},"name":"version_made_by","qualname":"<ZipFile>::version_made_by","value":"fn (&self) -> (u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the version of the file\n","sig":null,"attributes":[{"value":"/ Get the version of the file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39254,"byte_end":39285,"line_start":441,"line_end":441,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39457,"byte_end":39461,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"name","qualname":"<ZipFile>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file\n","sig":null,"attributes":[{"value":"/ Get the name of the file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39417,"byte_end":39445,"line_start":445,"line_end":445,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39603,"byte_end":39611,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"name_raw","qualname":"<ZipFile>::name_raw","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file, in the raw (internal) byte representation.\n","sig":null,"attributes":[{"value":"/ Get the name of the file, in the raw (internal) byte representation.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39519,"byte_end":39591,"line_start":449,"line_end":449,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39835,"byte_end":39849,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<ZipFile>::sanitized_name","value":"fn (&self) -> ::std::path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file in a sanitized form. It truncates the name to the first NULL byte,\n removes a leading '/' and removes '..' parts.\n","sig":null,"attributes":[{"value":"/ Get the name of the file in a sanitized form. It truncates the name to the first NULL byte,","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39674,"byte_end":39769,"line_start":453,"line_end":453,"column_start":5,"column_end":100}},{"value":"/ removes a leading '/' and removes '..' parts.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39774,"byte_end":39823,"line_start":454,"line_end":454,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39976,"byte_end":39983,"line_start":459,"line_end":459,"column_start":12,"column_end":19},"name":"comment","qualname":"<ZipFile>::comment","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the comment of the file\n","sig":null,"attributes":[{"value":"/ Get the comment of the file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39933,"byte_end":39964,"line_start":458,"line_end":458,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40109,"byte_end":40120,"line_start":463,"line_end":463,"column_start":12,"column_end":23},"name":"compression","qualname":"<ZipFile>::compression","value":"fn (&self) -> CompressionMethod","parent":null,"children":[],"decl_id":null,"docs":" Get the compression method used to store the file\n","sig":null,"attributes":[{"value":"/ Get the compression method used to store the file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40044,"byte_end":40097,"line_start":462,"line_end":462,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40253,"byte_end":40268,"line_start":467,"line_end":467,"column_start":12,"column_end":27},"name":"compressed_size","qualname":"<ZipFile>::compressed_size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the file in the archive\n","sig":null,"attributes":[{"value":"/ Get the size of the file in the archive","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40198,"byte_end":40241,"line_start":466,"line_end":466,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40387,"byte_end":40391,"line_start":471,"line_end":471,"column_start":12,"column_end":16},"name":"size","qualname":"<ZipFile>::size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the file when uncompressed\n","sig":null,"attributes":[{"value":"/ Get the size of the file when uncompressed","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40329,"byte_end":40375,"line_start":470,"line_end":470,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40509,"byte_end":40522,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"last_modified","qualname":"<ZipFile>::last_modified","value":"fn (&self) -> DateTime","parent":null,"children":[],"decl_id":null,"docs":" Get the time the file was last modified\n","sig":null,"attributes":[{"value":"/ Get the time the file was last modified","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40454,"byte_end":40497,"line_start":474,"line_end":474,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40655,"byte_end":40661,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"is_dir","qualname":"<ZipFile>::is_dir","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the file is actually a directory\n","sig":null,"attributes":[{"value":"/ Returns whether the file is actually a directory","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40591,"byte_end":40643,"line_start":478,"line_end":478,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40829,"byte_end":40836,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"is_file","qualname":"<ZipFile>::is_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the file is a regular file\n","sig":null,"attributes":[{"value":"/ Returns whether the file is a regular file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40771,"byte_end":40817,"line_start":482,"line_end":482,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40929,"byte_end":40938,"line_start":487,"line_end":487,"column_start":12,"column_end":21},"name":"unix_mode","qualname":"<ZipFile>::unix_mode","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get unix mode for the file\n","sig":null,"attributes":[{"value":"/ Get unix mode for the file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":40887,"byte_end":40917,"line_start":486,"line_end":486,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":41796,"byte_end":41801,"line_start":513,"line_end":513,"column_start":12,"column_end":17},"name":"crc32","qualname":"<ZipFile>::crc32","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the CRC32 hash of the original file\n","sig":null,"attributes":[{"value":"/ Get the CRC32 hash of the original file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":41741,"byte_end":41784,"line_start":512,"line_end":512,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":41927,"byte_end":41937,"line_start":518,"line_end":518,"column_start":12,"column_end":22},"name":"data_start","qualname":"<ZipFile>::data_start","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting offset of the data of the compressed file\n","sig":null,"attributes":[{"value":"/ Get the starting offset of the data of the compressed file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":41853,"byte_end":41915,"line_start":517,"line_end":517,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44206,"byte_end":44230,"line_start":574,"line_end":574,"column_start":8,"column_end":32},"name":"read_zipfile_from_stream","qualname":"::read::read_zipfile_from_stream","value":"fn <'a, R> (reader: &'a mut R) -> ZipResult<Option<ZipFile<'_>>>","parent":null,"children":[],"decl_id":null,"docs":" Read ZipFile structures from a non-seekable reader.","sig":null,"attributes":[{"value":"/ Read ZipFile structures from a non-seekable reader.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43434,"byte_end":43489,"line_start":558,"line_end":558,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43490,"byte_end":43493,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ This is an alternative method to read a zip file. If possible, use the ZipArchive functions","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43494,"byte_end":43589,"line_start":560,"line_end":560,"column_start":1,"column_end":96}},{"value":"/ as some information will be missing when reading this manner.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43590,"byte_end":43655,"line_start":561,"line_end":561,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43656,"byte_end":43659,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ Reads a file header from the start of the stream. Will return `Ok(Some(..))` if a file is","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43660,"byte_end":43753,"line_start":563,"line_end":563,"column_start":1,"column_end":94}},{"value":"/ present at the start of the stream. Returns `Ok(None)` if the start of the central directory","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43754,"byte_end":43850,"line_start":564,"line_end":564,"column_start":1,"column_end":97}},{"value":"/ is encountered. No more files should be read after this.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43851,"byte_end":43911,"line_start":565,"line_end":565,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43912,"byte_end":43915,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ The Drop implementation of ZipFile ensures that the reader will be correctly positioned after","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":43916,"byte_end":44013,"line_start":567,"line_end":567,"column_start":1,"column_end":98}},{"value":"/ the structure is done.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44014,"byte_end":44040,"line_start":568,"line_end":568,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44041,"byte_end":44044,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ Missing fields are:","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44045,"byte_end":44068,"line_start":570,"line_end":570,"column_start":1,"column_end":24}},{"value":"/ * `comment`: set to an empty string","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44069,"byte_end":44108,"line_start":571,"line_end":571,"column_start":1,"column_end":40}},{"value":"/ * `data_start`: set to 0","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44109,"byte_end":44137,"line_start":572,"line_end":572,"column_start":1,"column_end":29}},{"value":"/ * `external_attributes`: `unix_mode()`: will return None","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":44138,"byte_end":44198,"line_start":573,"line_end":573,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50740,"byte_end":50746,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Stored","qualname":"::compression::CompressionMethod::Stored","value":"CompressionMethod::Stored","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" The file is stored (no compression)\n","sig":null,"attributes":[{"value":"/ The file is stored (no compression)","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50696,"byte_end":50735,"line_start":9,"line_end":9,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50813,"byte_end":50821,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Deflated","qualname":"::compression::CompressionMethod::Deflated","value":"CompressionMethod::Deflated","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" Deflate in pure rust\n","sig":null,"attributes":[{"value":"/ Deflate in pure rust","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50752,"byte_end":50776,"line_start":11,"line_end":11,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"deflate\")","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50781,"byte_end":50808,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50956,"byte_end":50967,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::compression::CompressionMethod::Unsupported","value":"CompressionMethod::Unsupported(u16)","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" Unsupported compression method\n","sig":null,"attributes":[{"value":"/ Unsupported compression method","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50917,"byte_end":50951,"line_start":17,"line_end":17,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50672,"byte_end":50689,"line_start":7,"line_end":7,"column_start":10,"column_end":27},"name":"CompressionMethod","qualname":"::compression::CompressionMethod","value":"CompressionMethod::{Stored, Deflated, Unsupported}","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385}],"decl_id":null,"docs":" Compression methods for the contents of a ZIP file.\n","sig":null,"attributes":[{"value":"/ Compression methods for the contents of a ZIP file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50566,"byte_end":50621,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51076,"byte_end":51084,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<CompressionMethod>::from_u16","value":"fn (val: u16) -> CompressionMethod","parent":null,"children":[],"decl_id":null,"docs":" Converts an u16 to its corresponding CompressionMethod\n","sig":null,"attributes":[{"value":"/ Converts an u16 to its corresponding CompressionMethod","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51006,"byte_end":51064,"line_start":22,"line_end":22,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51476,"byte_end":51482,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"to_u16","qualname":"<CompressionMethod>::to_u16","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Converts a CompressionMethod to a u16\n","sig":null,"attributes":[{"value":"/ Converts a CompressionMethod to a u16","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51423,"byte_end":51464,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":226},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":409},{"krate":0,"index":407},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" Structs for creating a new zip archive\n","sig":null,"attributes":[{"value":"! Structs for creating a new zip archive","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":53325,"byte_end":53367,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54742,"byte_end":54751,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"ZipWriter","qualname":"::write::ZipWriter","value":"ZipWriter {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Generator for ZIP files.","sig":null,"attributes":[{"value":"/ Generator for ZIP files.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":53997,"byte_end":54025,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54026,"byte_end":54029,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54030,"byte_end":54037,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ fn doit() -> zip::result::ZipResult<()>","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54038,"byte_end":54081,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54082,"byte_end":54087,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/     use std::io::Write;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54088,"byte_end":54115,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54116,"byte_end":54119,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // For this example we write to a buffer, but normally you should use a File","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54120,"byte_end":54204,"line_start":37,"line_end":37,"column_start":1,"column_end":85}},{"value":"/     let mut buf: &mut [u8] = &mut [0u8; 65536];","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54205,"byte_end":54256,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/     let mut w = std::io::Cursor::new(buf);","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54257,"byte_end":54303,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     let mut zip = zip::ZipWriter::new(w);","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54304,"byte_end":54349,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54350,"byte_end":54353,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     let options = zip::write::FileOptions::default().compression_method(zip::CompressionMethod::Stored);","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54354,"byte_end":54462,"line_start":42,"line_end":42,"column_start":1,"column_end":109}},{"value":"/     zip.start_file(\"hello_world.txt\", options)?;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54463,"byte_end":54515,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     zip.write(b\"Hello, World!\")?;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54516,"byte_end":54553,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54554,"byte_end":54557,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     // Optionally finish the zip. (this is also done on drop)","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54558,"byte_end":54623,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/     zip.finish()?;","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54624,"byte_end":54646,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54647,"byte_end":54650,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54651,"byte_end":54665,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54666,"byte_end":54671,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54672,"byte_end":54675,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ println!(\"Result: {:?}\", doit().unwrap());","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54676,"byte_end":54722,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":54723,"byte_end":54730,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55092,"byte_end":55103,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::write::FileOptions","value":"FileOptions {  }","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"decl_id":null,"docs":" Metadata for a file to be written\n","sig":null,"attributes":[{"value":"/ Metadata for a file to be written","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55020,"byte_end":55057,"line_start":71,"line_end":71,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55289,"byte_end":55296,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"default","qualname":"<FileOptions>::default","value":"fn () -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Construct a new FileOptions object\n","sig":null,"attributes":[{"value":"/ Construct a new FileOptions object","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55239,"byte_end":55277,"line_start":80,"line_end":80,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56031,"byte_end":56049,"line_start":96,"line_end":96,"column_start":12,"column_end":30},"name":"compression_method","qualname":"<FileOptions>::compression_method","value":"fn (mut self, method: CompressionMethod) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the compression method for the new file","sig":null,"attributes":[{"value":"/ Set the compression method for the new file","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55786,"byte_end":55833,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55838,"byte_end":55841,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The default is `CompressionMethod::Deflated`. If the deflate compression feature is","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55846,"byte_end":55933,"line_start":93,"line_end":93,"column_start":5,"column_end":92}},{"value":"/ disabled, `CompressionMethod::Stored` becomes the default.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55938,"byte_end":56000,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56005,"byte_end":56019,"line_start":95,"line_end":95,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56332,"byte_end":56350,"line_start":105,"line_end":105,"column_start":12,"column_end":30},"name":"last_modified_time","qualname":"<FileOptions>::last_modified_time","value":"fn (mut self, mod_time: DateTime) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the last modified time","sig":null,"attributes":[{"value":"/ Set the last modified time","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56170,"byte_end":56200,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56205,"byte_end":56208,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The default is the current timestamp if the 'time' feature is enabled, and 1980-01-01","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56213,"byte_end":56302,"line_start":103,"line_end":103,"column_start":5,"column_end":94}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56307,"byte_end":56320,"line_start":104,"line_end":104,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56728,"byte_end":56744,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"unix_permissions","qualname":"<FileOptions>::unix_permissions","value":"fn (mut self, mode: u32) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the permissions for the new file.","sig":null,"attributes":[{"value":"/ Set the permissions for the new file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56466,"byte_end":56507,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56512,"byte_end":56515,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The format is represented with unix-style permissions.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56520,"byte_end":56578,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/ The default is `0o644`, which represents `rw-r--r--` for files,","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56583,"byte_end":56650,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ and `0o755`, which represents `rwxr-xr-x` for directories","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56655,"byte_end":56716,"line_start":114,"line_end":114,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58162,"byte_end":58165,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipWriter<W>>::new","value":"fn (inner: W) -> ZipWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the ZipWriter.","sig":null,"attributes":[{"value":"/ Initializes the ZipWriter.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58032,"byte_end":58062,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58067,"byte_end":58070,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Before writing to this object, the start_file command should be called.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58075,"byte_end":58150,"line_start":169,"line_end":169,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58516,"byte_end":58527,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"set_comment","qualname":"<ZipWriter<W>>::set_comment","value":"fn <S> (&mut self, comment: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set ZIP archive comment. Defaults to 'zip-rs' if not set.\n","sig":null,"attributes":[{"value":"/ Set ZIP archive comment. Defaults to 'zip-rs' if not set.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58443,"byte_end":58504,"line_start":182,"line_end":182,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":60966,"byte_end":60976,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"start_file","qualname":"<ZipWriter<W>>::start_file","value":"fn <S> (&mut self, name: S, mut options: FileOptions) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts a file.\n","sig":null,"attributes":[{"value":"/ Starts a file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":60936,"byte_end":60954,"line_start":257,"line_end":257,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61569,"byte_end":61589,"line_start":274,"line_end":274,"column_start":12,"column_end":32},"name":"start_file_from_path","qualname":"<ZipWriter<W>>::start_file_from_path","value":"fn (&mut self, path: &std::path::Path, options: FileOptions) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts a file, taking a Path as argument.","sig":null,"attributes":[{"value":"/ Starts a file, taking a Path as argument.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61344,"byte_end":61389,"line_start":270,"line_end":270,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61394,"byte_end":61397,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function ensures that the '/' path seperator is used. It also ignores all non 'Normal'","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61402,"byte_end":61497,"line_start":272,"line_end":272,"column_start":5,"column_end":100}},{"value":"/ Components, such as a starting '/' or '..' and '.'.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61502,"byte_end":61557,"line_start":273,"line_end":273,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61831,"byte_end":61844,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"add_directory","qualname":"<ZipWriter<W>>::add_directory","value":"fn <S> (&mut self, name: S, mut options: FileOptions) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a directory entry.","sig":null,"attributes":[{"value":"/ Add a directory entry.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61732,"byte_end":61758,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61763,"byte_end":61766,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ You can't write data to the file afterwards.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":61771,"byte_end":61819,"line_start":280,"line_end":280,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62806,"byte_end":62829,"line_start":306,"line_end":306,"column_start":12,"column_end":35},"name":"add_directory_from_path","qualname":"<ZipWriter<W>>::add_directory_from_path","value":"fn (&mut self, path: &std::path::Path, options: FileOptions) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a directory entry, taking a Path as argument.","sig":null,"attributes":[{"value":"/ Add a directory entry, taking a Path as argument.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62573,"byte_end":62626,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62631,"byte_end":62634,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This function ensures that the '/' path seperator is used. It also ignores all non 'Normal'","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62639,"byte_end":62734,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ Components, such as a starting '/' or '..' and '.'.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62739,"byte_end":62794,"line_start":305,"line_end":305,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":63227,"byte_end":63233,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZipWriter<W>>::finish","value":"fn (&mut self) -> ZipResult<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish the last file and write all other zip-structures","sig":null,"attributes":[{"value":"/ Finish the last file and write all other zip-structures","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":62982,"byte_end":63041,"line_start":310,"line_end":310,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":63046,"byte_end":63049,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This will return the writer, but one should normally not append any data to the end of the file.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":63054,"byte_end":63154,"line_start":312,"line_end":312,"column_start":5,"column_end":105}},{"value":"/ Note that the zipfile will also be finished on drop.","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":63159,"byte_end":63215,"line_start":313,"line_end":313,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\cp437.rs","byte_start":74714,"byte_end":74720,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Target","qualname":"::cp437::FromCp437::Target","value":"type Target;","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Target type\n","sig":null,"attributes":[{"value":"/ Target type","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\cp437.rs","byte_start":74689,"byte_end":74704,"line_start":5,"line_end":5,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":410},{"krate":0,"index":422},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":" Error types that can be emitted from this library\n","sig":null,"attributes":[{"value":"! Error types that can be emitted from this library","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79521,"byte_end":79574,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79706,"byte_end":79715,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ZipResult","qualname":"::result::ZipResult","value":"Result<T, ZipError>","parent":null,"children":[],"decl_id":null,"docs":" Generic result type with ZipError as its error variant\n","sig":null,"attributes":[{"value":"/ Generic result type with ZipError as its error variant","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79638,"byte_end":79696,"line_start":8,"line_end":8,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79838,"byte_end":79840,"line_start":16,"line_end":16,"column_start":5,"column_end":7},"name":"Io","qualname":"::result::ZipError::Io","value":"ZipError::Io(io::Error)","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":" An Error caused by I/O\n","sig":null,"attributes":[{"value":"/ An Error caused by I/O","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79807,"byte_end":79833,"line_start":15,"line_end":15,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79906,"byte_end":79920,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidArchive","qualname":"::result::ZipError::InvalidArchive","value":"ZipError::InvalidArchive(&'static str)","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":" This file is probably not a zip archive\n","sig":null,"attributes":[{"value":"/ This file is probably not a zip archive","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79858,"byte_end":79901,"line_start":18,"line_end":18,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79979,"byte_end":79997,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"UnsupportedArchive","qualname":"::result::ZipError::UnsupportedArchive","value":"ZipError::UnsupportedArchive(&'static str)","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":" This archive is not supported\n","sig":null,"attributes":[{"value":"/ This archive is not supported","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79941,"byte_end":79974,"line_start":21,"line_end":21,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80079,"byte_end":80091,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"FileNotFound","qualname":"::result::ZipError::FileNotFound","value":"ZipError::FileNotFound","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":" The requested file could not be found in the archive\n","sig":null,"attributes":[{"value":"/ The requested file could not be found in the archive","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80018,"byte_end":80074,"line_start":24,"line_end":24,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79792,"byte_end":79800,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ZipError","qualname":"::result::ZipError","value":"ZipError::{Io, InvalidArchive, UnsupportedArchive, FileNotFound}","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420}],"decl_id":null,"docs":" Error type for Zip\n","sig":null,"attributes":[{"value":"/ Error type for Zip","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":79743,"byte_end":79765,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":1060,"byte_end":1079,"line_start":23,"line_end":23,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":4834,"byte_end":4865,"line_start":109,"line_end":109,"column_start":6,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":6138,"byte_end":6162,"line_start":144,"line_end":144,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","byte_start":8667,"byte_end":8678,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","byte_start":9150,"byte_end":9161,"line_start":39,"line_end":39,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":9752,"byte_end":9758,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10534,"byte_end":10542,"line_start":43,"line_end":43,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10816,"byte_end":10824,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":16030,"byte_end":16041,"line_start":228,"line_end":228,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":26213,"byte_end":26223,"line_start":117,"line_end":117,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39145,"byte_end":39152,"line_start":437,"line_end":437,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":42010,"byte_end":42017,"line_start":523,"line_end":523,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":42152,"byte_end":42159,"line_start":529,"line_end":529,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50982,"byte_end":50999,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51824,"byte_end":51841,"line_start":47,"line_end":47,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55221,"byte_end":55232,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56869,"byte_end":56880,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56977,"byte_end":56986,"line_start":127,"line_end":127,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":57839,"byte_end":57853,"line_start":156,"line_end":156,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58013,"byte_end":58022,"line_start":165,"line_end":165,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":64423,"byte_end":64432,"line_start":353,"line_end":353,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":64700,"byte_end":64716,"line_start":366,"line_end":366,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\cp437.rs","byte_start":75271,"byte_end":75274,"line_start":27,"line_end":27,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80101,"byte_end":80109,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80702,"byte_end":80710,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80831,"byte_end":80836,"line_start":57,"line_end":57,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80966,"byte_end":80974,"line_start":65,"line_end":65,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":81127,"byte_end":81135,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":246,"byte_end":250,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":99}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":277,"byte_end":282,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":196}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\lib.rs","byte_start":303,"byte_end":309,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":298}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":1060,"byte_end":1079,"line_start":23,"line_end":23,"column_start":6,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":4834,"byte_end":4865,"line_start":109,"line_end":109,"column_start":6,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\spec.rs","byte_start":6138,"byte_end":6162,"line_start":144,"line_end":144,"column_start":6,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","byte_start":8667,"byte_end":8678,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\crc32.rs","byte_start":9150,"byte_end":9161,"line_start":39,"line_end":39,"column_start":24,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":63},"to":{"krate":1,"index":2861}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":9752,"byte_end":9758,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10534,"byte_end":10542,"line_start":43,"line_end":43,"column_start":34,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":10816,"byte_end":10824,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\types.rs","byte_start":16030,"byte_end":16041,"line_start":228,"line_end":228,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":26213,"byte_end":26223,"line_start":117,"line_end":117,"column_start":24,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":39145,"byte_end":39152,"line_start":437,"line_end":437,"column_start":10,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":42010,"byte_end":42017,"line_start":523,"line_end":523,"column_start":19,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":132},"to":{"krate":1,"index":2861}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\read.rs","byte_start":42152,"byte_end":42159,"line_start":529,"line_end":529,"column_start":19,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2076}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":50982,"byte_end":50999,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\compression.rs","byte_start":51824,"byte_end":51841,"line_start":47,"line_end":47,"column_start":23,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":55221,"byte_end":55232,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56869,"byte_end":56880,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":56977,"byte_end":56986,"line_start":127,"line_end":127,"column_start":35,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2915}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":57839,"byte_end":57853,"line_start":156,"line_end":156,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":58013,"byte_end":58022,"line_start":165,"line_end":165,"column_start":25,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":64423,"byte_end":64432,"line_start":353,"line_end":353,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2076}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\write.rs","byte_start":64700,"byte_end":64716,"line_start":366,"line_end":366,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\cp437.rs","byte_start":75271,"byte_end":75274,"line_start":27,"line_end":27,"column_start":20,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":283}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80101,"byte_end":80109,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80702,"byte_end":80710,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80831,"byte_end":80836,"line_start":57,"line_end":57,"column_start":38,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":2481},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":80966,"byte_end":80974,"line_start":65,"line_end":65,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\alexd\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.5\\src\\result.rs","byte_start":81127,"byte_end":81135,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":410},"to":{"krate":1,"index":1624}}]}